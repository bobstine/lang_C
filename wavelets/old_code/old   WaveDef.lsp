;;;;  Wavelet coefficient definitions from Don Percival.

;;; a modest collection of wavelets, including
;;; [1]  the Haar wavelet,
;;; [2]  Daubechies's "extremal phase" wavelets
;;;      (Daubechies, 1992, p.195, Table 6.1)
;;; and
;;; [3]  Daubechies's "least asymmetric" wavelets
;;;      (Daubechies, 1992, p.198, Table 6.3)
;;; Each scaling filter satisfies two normalizations:
;;; [a] its coefficients sum to the square root of 2 and
;;; [b] the sum of squares of its coefficients is unity.
;-----------------------------------------------------------------------------

(provide "wavedef")

;-----------------------------------------------------------------------------
(defvar *Haar* (vector (/ (sqrt 2)) (/ (sqrt 2))))

;;; Daubechies's D_4 wavelet (extremal phase) ...
(defvar *D4* (vector (/ (+ 1.0 (sqrt 3))
                        (* 4.0 (sqrt 2)))
                     (/ (+ 3.0 (sqrt 3))
                        (* 4.0 (sqrt 2)))
                     (/ (- 3.0 (sqrt 3))
                        (* 4.0 (sqrt 2)))
                     (/ (- 1.0 (sqrt 3))
                        (* 4.0 (sqrt 2)))))

(defvar *D6* (let* ((beta (expt 2 (- (/ 9 2))))
                    (sqrt10 (sqrt 10))
                    (alpha (sqrt (+ 5 (* 2 sqrt10)))))
               (vector (* beta (+ 1 sqrt10 alpha))
                       (* beta (+ 5 sqrt10 (* 3 alpha)))
                       (* beta (+ 10 (* -2 sqrt10) (* 2 alpha)))
                       (* beta (+ 10 (* -2 sqrt10) (* -2 alpha)))
                       (* beta (+ 5 sqrt10 (* -3 alpha)))
                       (* beta (+ 1 sqrt10 (- alpha))))))

(defvar *D8* (vector 0.2303778133088964
                     0.7148465705529154
                     0.6308807679398587
                     -0.0279837694168599
                     -0.1870348117190931
                     0.0308413818355607
                     0.0328830116668852
                     -0.0105974017850690))

(defvar *D12* (vector 0.1115407433501095
                      0.4946238903984533
                      0.7511339080210959
                      0.3152503517091982
                      -0.2262646939654400
                      -0.1297668675672625
                      0.0975016055873225
                      0.0275228655303053
                      -0.0315820393174862
                      0.0005538422011614
                      0.0047772575109455
                      -0.0010773010853085))

(defvar *D20* (vector 0.0266700579005473
                      0.1881768000776347
                      0.5272011889315757
                      0.6884590394534363
                      0.2811723436605715
                      -0.2498464243271598
                      -0.1959462743772862
                      0.1273693403357541
                      0.0930573646035547
                      -0.0713941471663501
                      -0.0294575368218399
                      0.0332126740593612
                      0.0036065535669870
                      -0.0107331754833007
                      0.0013953517470688
                      0.0019924052951925
                      -0.0006858566949564
                      -0.0001164668551285
                      0.0000935886703202
                      -0.0000132642028945))

;;; Daubechies's least asymmetric wavelet of order 8 ...
(defvar *LA8* (let ((sqrt-2 (sqrt 2)))
                (vector (/ -0.107148901418 sqrt-2)
                        (/ -0.041910965125 sqrt-2)
                        (/  0.703739068656 sqrt-2)
                        (/  1.136658243408 sqrt-2)
                        (/  0.421234534204 sqrt-2)
                        (/ -0.140317624179 sqrt-2)
                        (/ -0.017824701442 sqrt-2)
                        (/  0.045570345896 sqrt-2))))


(defvar *LA10* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.038654795955 sqrt-2)
                         (/  0.041746864422 sqrt-2)
                         (/ -0.055344186117 sqrt-2)
                         (/  0.281990696854 sqrt-2)
                         (/  1.023052966894 sqrt-2)
                         (/  0.896581648380 sqrt-2)
                         (/  0.023478923136 sqrt-2)
                         (/ -0.247951362613 sqrt-2)
                         (/ -0.029842499869 sqrt-2)
                         (/  0.027632152958 sqrt-2)
                         )))

(defvar *LA12* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.021784700327 sqrt-2)
                         (/  0.004936612372 sqrt-2)
                         (/ -0.166863215412 sqrt-2)
                         (/ -0.068323121587 sqrt-2)
                         (/  0.694457972958 sqrt-2)
                         (/  1.113892783926 sqrt-2)
                         (/  0.477904371333 sqrt-2)
                         (/ -0.102724969862 sqrt-2)
                         (/ -0.029783751299 sqrt-2)
                         (/  0.063250562660 sqrt-2)
                         (/  0.002499922093 sqrt-2)
                         (/ -0.011031867509 sqrt-2))))


(defvar *LA14* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.003792658534 sqrt-2)
                         (/ -0.001481225915 sqrt-2)
                         (/ -0.017870431651 sqrt-2)
                         (/  0.043155452582 sqrt-2)
                         (/  0.096014767936 sqrt-2)
                         (/ -0.070078291222 sqrt-2)
                         (/  0.024665659489 sqrt-2)
                         (/  0.758162601964 sqrt-2)
                         (/  1.085782709814 sqrt-2)
                         (/  0.408183939725 sqrt-2)
                         (/ -0.198056706807 sqrt-2)
                         (/ -0.152463871896 sqrt-2)
                         (/  0.005671342686 sqrt-2)
                         (/  0.014521394762 sqrt-2))))

(defvar *LA16* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.002672793393 sqrt-2)
                         (/ -0.000428394300 sqrt-2)
                         (/ -0.021145686528 sqrt-2)
                         (/  0.005386388754 sqrt-2)
                         (/  0.069490465911 sqrt-2)
                         (/ -0.038493521263 sqrt-2)
                         (/ -0.073462508761 sqrt-2)
                         (/  0.515398670374 sqrt-2)
                         (/  1.099106630537 sqrt-2)
                         (/  0.680745347190 sqrt-2)
                         (/ -0.086653615406 sqrt-2)
                         (/ -0.202648655286 sqrt-2)
                         (/  0.010758611751 sqrt-2)
                         (/  0.044823623042 sqrt-2)
                         (/ -0.000766690896 sqrt-2)
                         (/ -0.004783458512 sqrt-2))))


(defvar *LA18* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.001512487309 sqrt-2)
                         (/ -0.000669141509 sqrt-2)
                         (/ -0.014515578553 sqrt-2)
                         (/  0.012528896242 sqrt-2)
                         (/  0.087791251554 sqrt-2)
                         (/ -0.025786445930 sqrt-2)
                         (/ -0.270893783503 sqrt-2)
                         (/  0.049882830959 sqrt-2)
                         (/  0.873048407349 sqrt-2)
                         (/  1.015259790832 sqrt-2)
                         (/  0.337658923602 sqrt-2)
                         (/ -0.077172161097 sqrt-2)
                         (/  0.000825140929 sqrt-2)
                         (/  0.042744433602 sqrt-2)
                         (/ -0.016303351226 sqrt-2)
                         (/ -0.018769396836 sqrt-2)
                         (/  0.000876502539 sqrt-2)
                         (/  0.001981193736 sqrt-2))))

 
(defvar *LA20* (let ((sqrt-2 (sqrt 2)))
                 (vector (/  0.001089170447 sqrt-2)
                         (/  0.000135245020 sqrt-2)
                         (/ -0.012220642630 sqrt-2)
                         (/ -0.002072363923 sqrt-2)
                         (/  0.064950924579 sqrt-2)
                         (/  0.016418869426 sqrt-2)
                         (/ -0.225558972234 sqrt-2)
                         (/ -0.100240215031 sqrt-2)
                         (/  0.667071338154 sqrt-2)
                         (/  1.088251530500 sqrt-2)
                         (/  0.542813011213 sqrt-2)
                         (/ -0.050256540092 sqrt-2)
                         (/ -0.045240772218 sqrt-2)
                         (/  0.070703567550 sqrt-2)
                         (/  0.008152816799 sqrt-2)
                         (/ -0.028786231926 sqrt-2)
                         (/ -0.001137535314 sqrt-2)
                         (/  0.006495728375 sqrt-2)
                         (/  0.000080661204 sqrt-2)
                         (/ -0.000649589896 sqrt-2))))

