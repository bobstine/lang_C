/*				ElemArrayOps.h						*//*									 7 Oct 87		*//*							rev		25 Jan 89		*//*		NOTE:										*//*			(1) Matrices treated as though col		*//*				major order							*//*			(2) Vector/Matrix funs use long names	*/#include "ArrayDef.h"void CopyVector (Vector *a, Vector *b);void CopyVec (double *a, double *b, int len);		/* Length taken from destination, if positive */void CopyMatrix (Matrix *a, Matrix *b);void CopyMat (double *a[], double *b[], int nRows, int nCols);		/* Length taken from destination, if nRows pos */	void CopyCube (Cube *src, Cube *dest);double MaxAbsVector (Vector *vec);double MaxAbsVec (double *v, int len);    	/* Computes the max absolute element of the vector. */double DotProdVector (Vector *a, Vector *b);#ifdef	USEASMextern double DotProdVec (double *a, double *b, int len);#elsedouble DotProdVec (double *a, double *b, int n);#endif    	/* Computes the sum of the products of the two vectors --- Checked  2/9/89 */double CrossLagProdVector (Vector *a, Vector *b, int lag);double CrossLagProdVec (double *a, double *b, int len, int lag);		/* Uses dot product function with shifted pointer. */		double SumVector (Vector *vec);#ifdef USEASMextern double SumVec(double *a, int len);#elsedouble SumVec (double *a, int n);#endif    	/* Computes the sum of the data vector of length n --- Checked  2/9/89  */double StdDevVector (Vector *vec, double center);double StdDevVec (double *data, int len, double center);		/* Computes the standard deviation using the n-1 divisor. */double QuadFormVector (Vector *vec, Matrix *mat);double QuadFormVec (double *v, double *mat[], int dim);		/* Quad form using only the upper triangular half of mat. */void CalcLagProdVector (Vector *vec, Vector *lagProd);void CalcLagProdVec (double *y, int len, double *lagProd, int maxLag);		/* NO mean correction is performed; len of lagProd=maxLag+1; use N divisor.*/void DiffVector (int diff, Vector *yDiff);void DiffVec (int diff, double *yDiff, int len);	/* In place operation, oriented to have diffs start at zeroth location. 															--- Checked  2/9/89    */